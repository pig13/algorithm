ACM

tips

1. 判断数组内最大连续？
解：double数组，[1,2] ==> [1,2,1,2], 判定特殊情况，全为N的情况.

这一类数组周期循环的，都可以用double数组 来搞定

2. 赋值最小、最大值
min = Integer.MAX
max = Integer.MIN


3. 百万级数据下，map不会爆

4. 边界要控制好

5. 预估测试用例，反向分析


6. scanner，读取数据上十万会炸

7. 打表法
	如果数据量有限，可以写程序全部求出来，然后根据参数返回相应的数据

8. 单个字符串转int
	1. (int) (str.charAt(i)-48)		销量最高
	2. Interger.pasertInt(str.subString(i,i+1))	较慢

9. 素数算法
	1. 3-sqrt(n)
	2. 3-sqrt(n),  如果这个数不是在6x的两侧，他就不是质数。
	3. 筛选法->线筛法
	4. 容斥原理，			从这里看不懂了
	5. Meissel-Lehmer算法

10. 如果算法理论上没错，但是代码不过
	1. 算法不换，代码换种实现重写			->  算法实现错误
	2. 审核原算法，中每个 小算法
	3. 算法不正确，换算法


11. 时间复杂度预估 n
	1. 0-12,n!
	2. 0-20,2^n
	3. 100级别，n^3
	4. 1000级别，n^2
	5. 10000级别，nlogn
	6. n

12. 输入输出优化
		输出优化
			static PrintWriter pw = new PrintWriter(new BufferedOutputStream(System.out));

13. String split 的坑 拆分结果末尾的所有空字符串都被砍掉，而开头的和中间的不会被砍掉
	jshell> "a,b,c".split(",")
	$1 ==> String[3] { "a", "b", "c" }


	jshell> "a,b,".split(",")
	$2 ==> String[2] { "a", "b" }


	jshell> "a,,c".split(",")
	$3 ==> String[3] { "a", "", "c" }


	jshell> ",b,c".split(",")
	$4 ==> String[3] { "", "b", "c" }


	jshell> ",b,".split(",")
	$5 ==> String[2] { "", "b" }


	",,a,,b,,".split(",")
	$6 ==> String[5] { "", "", "a", "", "b" }


14. 感觉写的代码很复杂，就一定是算法实现理解不到位，剖析不深，可能再深入一丢丢，实现就很容易
	同时，简单的题，也不要想得很复杂。。。


